1、DNA Sequence(poj 2778)
题意：
    现在有n个(0<=n<=10)的长度为l(1<=l<=10)的串，想知道组成m(1<=m<=2e9)长度的基因序列，其中基因序列只存在A,T,C,G，
以及不包括之前的串。

思路：
    这是一个多串匹配问题,关键是无法处理2e9的长度.但是因为2e9的长度,可以联想到使用矩阵快速幂处理。这里就是矩阵快速幂
的核心难点,不知道如何建立矩阵.尝试了各种方案，始终没成功,查了题解才醒悟过来，可以使用离散数学中不断将mat^k,mat[i,j]
表示i->j的路径数的方法。可以建立ac自动机，初始矩阵可以通过for(int i=0;i<ac.tot,i++)for(int j=0;j<4;j++)表示i节点
到若下个是j的字符，会有何种变化。建立好之后，就可以通过矩阵快速幂解决问题。

2、Detect the Virus(zoj3430)
反思：
    将一段字符串从6位为主的变为8位，如果单纯地先用01二进制作为中间媒介，那么会内存爆炸或者时间超限，此时可以使用位运算。
void ReEncode(char *a) {//反编码 
	temp[0] = 0;
	for (int i = 0, len = 0, x = 0; a[i] && a[i] != '='; ++i) {
		len += 6, x = (x << 6) | M[a[i]];
		if (len >= 8) {
			temp[++temp[0]] = (x >> (len - 8)) & 0xff;//0xff是恰好8位1,x>>(len-8)保证是每8位进行&运算
			len -= 8;
		}
	}
}

3、Censored!(poj1625)
题意：
    本题是有n个字符(1<=n<=50)，p(1<=p<=10)个被限定的不能出现的串,现求m(1<=m<=50)长字符组合数有多少个。

思路：
    显然先建立ac自动机,因为数据量非常大，肯定会爆ll,因此寻求dp+高精度计算。设dp[i][j]表示第i个字符的时候
转移到j节点有多少种情况.
