规律总结：
1、期望可以分解成多个子期望的加权和，权为子期望发生的概率，即E(aA+bB...)=aE(A)+bE(B)+...+1
2、期望从后往前找，一般dp[n]=0,dp[0]是答案
3、解决过程，找出各种情况乘上这种情况发生的概率，求和

1、Favorite Dice (spoj)
题意：
    甩一个n面的骰子，问每一面都被甩到的次数期望是多少？

思路：
    设dp[i]表示取了i种数时还需取得数的期望，显然dp[n]=0,求解dp[0]
由于选第i个数后再选一个数与已经选过的数不同的概率为(n-i)/n，相同为i/n
于是可以得到状态转移方程 dp[i]=(n-i)/n*dp[i+1]+i/n*dp[i]+1
推得 dp[i]=dp[i+1]+n/(n-i)  只需要for循环一下即可

核心代码：
dp[n] = 0;
for (int i = n - 1; i >= 0; i--)
    dp[i] = dp[i + 1] + n /(n - i + 0.0);
printf("%.2lf\n", dp[0]);


2、LOOPS (hdu3853)
题意：
    一个女生走迷宫，只有向下和向右走和保持在原地，每走一次会消耗掉2的魔力，求从(1,1)成功走到(r,c)所花魔力的期望。

思路：
    设dp[r][c]=0，那么有满足状态转移方程 dp[i][j] = p1*dp[i][j]+p2*dp[i][j+1]+p3*dp[i+1][j]+2
转化成  dp[i][j] = (p2*dp[i][j+1]+p3*dp[i+1][j]+2)/(1-p1) 即可

核心代码：
for (int i = r; i >= 1; i--) {
    for (int j = c; j >= 1; j--) {
	if (i == r && j == c)
		continue;
	if (p[i][j].p1 == 1)
		continue;
	dp[i][j] = (p[i][j].p2*dp[i][j + 1] + 2 + p[i][j].p3*dp[i + 1][j]) / (1 - p[i][j].p1);
    }
 }
   
 反思：
    dp[i][j]表示在(i,j)这个点时，还差多少魔力值才能到达终点的期望。
    最开始的时候dp[i][j]将未来的状态也加入其中，其实那种想法是错误的，因为当前还未确定，未来也不会确定，因此状态转移方程所含
 的应该是当前不确定的dp[i][j]和之前已经推导出的状态来推导出dp[i][j]最终推导dp[1][1]的时候就是答案。
 
 3、Kids and Prizes(sgu495)
 题意：
     本题就是有n个奖品，m个人排队来选礼物，对于每个人，他打开的盒子，可能有礼物，也有可能已经被之前的人取走了，
 然后把盒子放回原处。为最后m个人取走礼物的期望。
 
 思路：
 1、设每种礼物不会被拿到的概率为((n-1)/n)^m,因此不会被拿到的期望为n*((n-1)/n)^m，所以会拿到的期望为n(1-((n-1)/n)^m)
 2、设dp[i]为总共i个人取得礼物时所拿到奖品的期望，则dp[1]=1,显然满足状态转移方程：
 dp[i] = dp[i-1] + (n-dp[i-1])/n*1+dp[i-1]/n*0 => dp[i] = dp[i-1] + (n-dp[i-1])/n 
 
 反思：
     概率题推期望不是只有一种模式逆推，要结合具体情况，通过赋予对状态转移方程的实际意义来推导。对于概率的题如果实在推不出来
 可以尝试使用日常经验的手段去推。
	  
4、King Arthur's Birthday Celebration(poj3682)
题意：
    有个国王过生日，投硬币，投到k次正面朝上就结束宴会，正面朝上概率为p，每一天投一次，花钱量1、3、5、7...这样递增。求
结束宴会的期望天数和期望花钱量。

思路：
    设dp[i]表示投中i次后，还需要天数的期望。显然满足 dp[i]=(1-p)*dp[i]+p*dp[i]+1 => dp[i]=dp[i+1]+1/p。 
dp2[i]表示投中i次后，还需要花钱的期望，显然满足 dp2[i]=(1-p)*(dp2[i]+2*(dp[i]+1)-1)+p*(dp2[i+1]+2*(dp[x+1]+1)-1).
=> 得到 dp2[i]=dp2[i]+2dp[i+1]+1+(1-p)(2dp[i]+1)/p。然后dp[n]=dp2[n]=0,for循环一下就可以得到答案。

反思：
    概率题如果不是通过一个公式快速得到的，就要注意是否使用概率dp了，对于概率dp我们需要仔细分析情况。
	  
5、Where is the canteen(hdu2262)
题意：
    在一个迷宫中，寻找餐厅，餐厅有多个，每次上下左右走向一个空地，概率为等可能，求到达餐厅的步数期望
    
思路：
    显然此题满足概率dp,状态转移方程满足 dp[i][j]=p1*dp[i+1][j]+p2*dp[i-1][j]+p3*dp[i][j-1]+p4*
dp[i][j+1]+1,其中点为餐厅的dp[i][j]=0，求最后dp[startx][starty]为多少？因此只需要先bfs，然后使用
高斯消元即可获得答案。 关键在于转移方程的理解。dp[i][j]表示到达餐厅还剩下多少步，因此它的步数是由其余
四个防线的dp[i][j]*p+移动步数1即可。

反思：代码不够优美，要多看看优美的代码
	   
