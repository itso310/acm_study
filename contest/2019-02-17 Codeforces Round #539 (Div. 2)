1.Sasha and a Bit of Relax
题意：
    给你一个a[n]的数组，问这里面有多少个满足[l,r]，r-l+1为偶数，mid=(r-l+1)/2,a[l]^a[l+1]^...^a[mid]=a[mid+1]^a[mid+2]
^...^a[r]。

思路:
    先保存前缀抑或和,即pre[i]=pre[i-1]^a[i]，再开一个even[i]和odd[i]数组，用来保存之前偶数位和奇数位值为i的数字有多少个。
之后不断查询即可获得答案。因为只要找到之前奇数/偶数位的值，那些说明这两个之间的数字最后抑或的结果为0。其中有个性质就是如有偶
数个值抑或=0，那么任意一半的数值抑或=剩下一半的数值抑或。

核心代码：
pre[i]=pre[i-1]^tmp;
if(i&1) {
     res += odd[pre[i]];
     odd[pre[i]]++;
}else{
     res += even[pre[i]];
     even[pre[i]]++;
}
