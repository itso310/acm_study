1、C. Ayoub and Lost Array 
题意：
  给你三个数,n,l,r。(1≤n≤2⋅10^5,1≤l≤r≤10^9) 满足一个n大小的数组其中只包含[l,r]之间的数，数组和可以被3整除，
求方案数，结果模1e9+7

思路：
  本题刚开始以为是组合数的方法，一直纠结，之后将[l,r]中模3位为0,1,2的数字统计出来。思考了很久没明白9个的状态转移方程，
之后询问了昊神突然反应过来，原来其实是个非常简单的dp问题，方程如下：
设a为模3为0的个数，b为模3为1的个数，c为模3为2的个数。那么有：
dp[i][0] = (dp[i - 1][0] * a%mod + dp[i - 1][1] * c%mod + dp[i - 1][2] * b%mod)%mod;
dp[i][1] = (dp[i - 1][0] * b%mod + dp[i - 1][1] * a%mod + dp[i - 1][2] * c%mod) % mod;
dp[i][2] = (dp[i - 1][0] * c%mod + dp[i - 1][1] * b%mod + dp[i - 1][2] * a%mod) % mod;
简单的说就是在dp[i][x]时，有i个数，组成之和%3==x的数量，比如dp[i][0]可以由dp[i-1][0]*a，即（0+0）%3,或
dp[i-1][1]*c,即(1+2)%3，或dp[i-1][2]*b,即(2+1)%3

反思：
  一般遇到取模题(%3之类)，我们可以先对一系列数字取模，通过取模可以缩小取值范围，对于状态摇摆不定，难以确定的情况下，要多考虑考虑dp，
通过状态转移方程，确定子状态，然后推得本状态。dp还需多训练,多思考，多总结!
