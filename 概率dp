规律总结：
1、期望可以分解成多个子期望的加权和，权为子期望发生的概率，即E(aA+bB...)=aE(A)+bE(B)+...+1
2、期望从后往前找，一般dp[n]=0,dp[0]是答案
3、解决过程，找出各种情况乘上这种情况发生的概率，求和

1、Favorite Dice (spoj)
题意：甩一个n面的骰子，问每一面都被甩到的次数期望是多少？

思路：设dp[i]表示取了i种数时还需取得数的期望，显然dp[n]=0,求解dp[0]
由于选第i个数后再选一个数与已经选过的数不同的概率为(n-i)/n，相同为i/n
于是可以得到状态转移方程 dp[i]=(n-i)/n*dp[i+1]+i/n*dp[i]+1
推得 dp[i]=dp[i+1]+n/(n-i)  只需要for循环一下即可

核心代码：
dp[n] = 0;
for (int i = n - 1; i >= 0; i--)
    dp[i] = dp[i + 1] + n /(n - i + 0.0);
printf("%.2lf\n", dp[0]);
